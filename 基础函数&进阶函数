1.文本函数
1.1 基础
（1） clean
删除文本中的所有不能打印字符
（2） trim
删除文本/字符串前后存在的空格
（3） concatenate，concat, &
合并字符串、文本
（4） len
计算文本中的字符数
（5） left,right,mid
从文本中提取子文本
（6）lower/upper
将文本转换为小写/大写
1.2 高阶
（1）text
将数值转化为自己想要的文本格式
语法格式：text(value,format_text)
format_text包含以下几种情况：
1）跟日期和星期相关的；规范格式，提取年、月、日、星期。
2）跟时间相关的；规范格式，提取时、分、秒
3）千分位和小数点位数相关的；
4）数值转换：美元与人民币、百分数、科学计数法、位数；
5）条件格式：text（A3，“[条件1]结果1;[条件2]结果2”;结果3）
（2）value
将文本参数转换为数字
语法格式：value(text)
（3）find
在一个文本中查找另一个文本值（区分大小写）
语法格式：find（find_text, within_text, [start_num]）
1)不支持通配符
2）返回数字，即找到所要查询字符串，返回错误，即没有找到
3）可以和isnumber()配合使用
（4）search
在一个文本中查找另一个文本值（不区分大小写）
语法格式：search（find_text, within_text, [start_num]）
1）支持通配符“?”   “*”
2）不区分大小写
3)若查找通配符，在其前面加“~”
（5）substitute
使用新文本替换文本字符串中的旧文本
语法格式substitute(text, old_text, new_text, [instance_num])
（6）replace
替换old_text中特定位置特定数量的字符串
语法格式：replace(old_text, start_num, num_chars, new_text)

2. 日期和时间
2.1 基础
（1）today
返回当天日期的序列号
语法格式：today()
（2）now
返回当前日期和时间的序列号
语法格式：now()
（3）date
返回特定日期的序列号
语法格式：date(year, month, day)
1)year 可以包括一位到四位数字；0~1899，则1900+year；1900~9999，则为year
2）month 一个正整数或负整数；大于12，则（0+month）/12;小于1，则0-mouth-1
3）day 一个正整数或负整数，1到31
（4）day
将序列号转换为一个月中的第几天
（5）month
将序列号转换为月
（6）year
将序列号转换为年
（7）weeknum
返回一年中的周数
语法格式：weeknum(serial_number, [return_type])
1)return_type, 星期从哪一天开始算
（8）weekday
将序列号转换为一个星期中的某天
语法格式：weekday(serial_number, [return_type])
1)return_type, 星期从哪一天开始算
（9）workday
返回指定工作日数之前或之后的日期的序列号
语法格式：workday(start_date, days, [holidays])
2.2 高阶
（1）datevalue
将文本形式的日期转换为序列号（数值类型），便于做日期加减计算
语法格式：datevalue(date_text)
1)参数date_text为日期的文本，例如“2018-2-12”
（2）days
返回两个日期之间的天数
语法格式：days(end_date, start_date)
1）注意参数为数字或者文本时
（3）datedif 
计算两个日期之间相隔的天数、月数、年数
语法格式：datedif(start_date, end_date, unit)
1)unit "Y" 年，"M" 月, "D" 天
